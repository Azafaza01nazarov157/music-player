CREATE SEQUENCE IF NOT EXISTS primary_sequence START WITH 10000 INCREMENT BY 1;

CREATE TABLE albums
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_by         VARCHAR(50)                             NOT NULL,
    created_date       TIMESTAMP with time zone,
    last_modified_by   VARCHAR(50),
    last_modified_date TIMESTAMP with time zone,
    title              VARCHAR(5000)                           NOT NULL,
    artist_id          BIGINT                                  NOT NULL,
    release_date       date,
    cover_url          VARCHAR(5000),
    genre              VARCHAR(5000),
    description        VARCHAR(5000),
    CONSTRAINT pk_albums PRIMARY KEY (id)
);

CREATE TABLE artists
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_by         VARCHAR(50)                             NOT NULL,
    created_date       TIMESTAMP with time zone,
    last_modified_by   VARCHAR(50),
    last_modified_date TIMESTAMP with time zone,
    name               VARCHAR(5000)                           NOT NULL,
    biography          VARCHAR(5000),
    image_url          VARCHAR(5000),
    CONSTRAINT pk_artists PRIMARY KEY (id)
);

CREATE TABLE play_history
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id       BIGINT                                  NOT NULL,
    track_id      BIGINT                                  NOT NULL,
    played_at     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    play_duration BIGINT,
    completed     BOOLEAN,
    ip_address    VARCHAR(5000),
    user_agent    VARCHAR(5000),
    CONSTRAINT pk_play_history PRIMARY KEY (id)
);

CREATE TABLE playlist_tracks
(
    playlist_id BIGINT NOT NULL,
    track_id    BIGINT NOT NULL,
    CONSTRAINT pk_playlist_tracks PRIMARY KEY (playlist_id, track_id)
);

CREATE TABLE playlists
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_by         VARCHAR(50)                             NOT NULL,
    created_date       TIMESTAMP with time zone,
    last_modified_by   VARCHAR(50),
    last_modified_date TIMESTAMP with time zone,
    name               VARCHAR(5000)                           NOT NULL,
    description        VARCHAR(5000),
    user_id            BIGINT                                  NOT NULL,
    cover_url          VARCHAR(5000),
    is_public          BOOLEAN,
    CONSTRAINT pk_playlists PRIMARY KEY (id)
);

CREATE TABLE refresh_tokens
(
    id                 BIGINT       NOT NULL,
    created_by         VARCHAR(50)  NOT NULL,
    created_date       TIMESTAMP with time zone,
    last_modified_by   VARCHAR(50),
    last_modified_date TIMESTAMP with time zone,
    token              VARCHAR(255) NOT NULL,
    expiration_time    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    user_id            BIGINT       NOT NULL,
    CONSTRAINT pk_refreshtokens PRIMARY KEY (id)
);

CREATE TABLE roles
(
    id   BIGINT NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE tracks
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_by         VARCHAR(50)                             NOT NULL,
    created_date       TIMESTAMP with time zone,
    last_modified_by   VARCHAR(50),
    last_modified_date TIMESTAMP with time zone,
    title              VARCHAR(5000)                           NOT NULL,
    artist_id          BIGINT                                  NOT NULL,
    album_id           BIGINT,
    user_id            BIGINT,
    file_path          VARCHAR(5000)                           NOT NULL,
    file_size          BIGINT,
    file_format        VARCHAR(5000),
    status             VARCHAR(255),
    duration           DECIMAL,
    bit_rate           INTEGER,
    sample_rate        INTEGER,
    track_number       INTEGER,
    genre              VARCHAR(255),
    play_count         BIGINT,
    CONSTRAINT pk_tracks PRIMARY KEY (id)
);

CREATE TABLE user_roles
(
    role_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT pk_userroles PRIMARY KEY (role_id, user_id)
);

CREATE TABLE user_settings
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_by         VARCHAR(50)                             NOT NULL,
    created_date       TIMESTAMP with time zone,
    last_modified_by   VARCHAR(50),
    last_modified_date TIMESTAMP with time zone,
    user_id            BIGINT                                  NOT NULL,
    theme              VARCHAR(5000),
    language           VARCHAR(5000),
    auto_play          BOOLEAN,
    preferred_quality  VARCHAR(5000),
    CONSTRAINT pk_user_settings PRIMARY KEY (id)
);

CREATE TABLE users
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_by          VARCHAR(50)                             NOT NULL,
    created_date        TIMESTAMP with time zone,
    last_modified_by    VARCHAR(50),
    last_modified_date  TIMESTAMP with time zone,
    username            VARCHAR(255)                            NOT NULL,
    email               VARCHAR(255)                            NOT NULL,
    password            VARCHAR(255)                            NOT NULL,
    first_name          VARCHAR(255),
    authentication_key  UUID,
    last_name           VARCHAR(255),
    enabled             BOOLEAN                                 NOT NULL,
    authentication      BOOLEAN                                 NOT NULL,
    password_reset_key  UUID,
    password_reset_date TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE users
    ADD CONSTRAINT uc_users_email UNIQUE (email);

ALTER TABLE users
    ADD CONSTRAINT uc_users_username UNIQUE (username);

ALTER TABLE albums
    ADD CONSTRAINT FK_ALBUMS_ON_ARTIST FOREIGN KEY (artist_id) REFERENCES artists (id);

ALTER TABLE playlists
    ADD CONSTRAINT FK_PLAYLISTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE play_history
    ADD CONSTRAINT FK_PLAY_HISTORY_ON_TRACK FOREIGN KEY (track_id) REFERENCES tracks (id);

ALTER TABLE play_history
    ADD CONSTRAINT FK_PLAY_HISTORY_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE refresh_tokens
    ADD CONSTRAINT FK_REFRESHTOKENS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE tracks
    ADD CONSTRAINT FK_TRACKS_ON_ALBUM FOREIGN KEY (album_id) REFERENCES albums (id);

ALTER TABLE tracks
    ADD CONSTRAINT FK_TRACKS_ON_ARTIST FOREIGN KEY (artist_id) REFERENCES artists (id);

ALTER TABLE tracks
    ADD CONSTRAINT FK_TRACKS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_settings
    ADD CONSTRAINT FK_USER_SETTINGS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE playlist_tracks
    ADD CONSTRAINT fk_platra_on_playlist FOREIGN KEY (playlist_id) REFERENCES playlists (id);

ALTER TABLE playlist_tracks
    ADD CONSTRAINT fk_platra_on_track FOREIGN KEY (track_id) REFERENCES tracks (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_user FOREIGN KEY (user_id) REFERENCES users (id);